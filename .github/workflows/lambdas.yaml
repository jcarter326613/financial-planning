name: Site

on:
  push:
    branches:
      - main
    paths:
      - lambdas/**

jobs:
  setup-vars:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - id: setup-vars
        run: |
          echo "::set-output name=BucketName::${{ secrets.AWS_ACCESS_KEY_ID }}-lambda-code"

    outputs:
      BucketName: ${{ steps.setup-vars.output.BucketName }}

  create-s3:
    runs-on: ubuntu-latest
    needs:
      - setup-vars
    environment: main
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy Cloudformation Template
        run: |
          cd lambdas
          aws cloudformation deploy --template-file cloudformation-pre.yaml --stack-name financial-planning-lambdas-pre --capabilities CAPABILITY_NAMED_IAM --parameters \
            BucketName=${{ needs.setup-vars.outputs.BucketName }}

  build-and-upload:
    runs-on: ubuntu-latest
    environment: main
    depends-on: setup-vars
    needs: 
      - create-s3
      - setup-vars
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Install Other Dependencies
        run: |
          sudo npm i -g typescript

      - name: Build the lambdas
        run: |
          cd lambdas
          tsc

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload site
        run: |
          aws s3 sync ./lambdas/out s3://${{ needs.setup-vars.outputs.BucketName }} --size-only
