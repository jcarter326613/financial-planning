Transform: AWS::Serverless-2016-10-31

Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 bucket
  EntryPoint:
    Type: String
    Description: The entrypoint into the lambda to start execution
  HttpMethod:
    Type: String
    Description: The http method that this lambda will accept
  InvocationRoleArn:
    Type: String
    Description: The ARN of the invocation role
  Path:
    Type: String
    Description: The path to the rest call after the base path
  RestApiId:
    Type: String
    Description: The id of the rest api
  RestApiRootResourceId:
    Type: String
    Description: The root resource id of the rest api to attach the method to.
  ZipFileName:
    Type: String
    Description: The name of the zip file which contains the lambda code

Resources:
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref ZipFileName
      Runtime: "nodejs14.x"
      Handler: !Join
        - "/"
        - - "out/main/controllers"
          - !Ref EntryPoint
      Timeout: 10

  LogsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Lambda}"
      RetentionInDays: 7

  Method:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: !Ref HttpMethod
      ResourceId: !Ref Resource
      RestApiId: !Ref RestApiId
      AuthorizationType: NONE
      Integration:
        Credentials: !Ref InvocationRoleArn
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Join
          - "/"
          - - "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions"
            - !GetAtt Lambda.Arn
            - "invocations"

  Resource:
    Type: AWS::ApiGateway::Resource
    Properties: 
      ParentId: !Ref RestApiRootResourceId
      PathPart: !Ref Path
      RestApiId: !Ref RestApiId